buildscript {
    ext {
        springBootVersion = '1.5.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.flywaydb:flyway-gradle-plugin:3.2.1")
        classpath("org.postgresql:postgresql:42.1.1")
    }
}


group 'college-app-tracker'
version '1.0-SNAPSHOT'

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'application'

mainClassName = "com.erwindev.apptracker.Application"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'college-app-tracker'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'

    compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"){
        exclude module: 'tomcat-jdbc'
    }
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}"){
        exclude module: 'spring-boot-starter-tomcat'
    }
    //use jetty
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")

    compile("org.postgresql:postgresql:42.1.1")

    compile("com.zaxxer:HikariCP:2.6.3")

    compile("org.flywaydb:flyway-core:4.2.0")

    compile("io.springfox:springfox-swagger2:2.7.0")
    compile("io.springfox:springfox-swagger-ui:2.7.0")

    compile("io.jsonwebtoken:jjwt:0.7.0")

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}

configurations {
    driver
}
URLClassLoader loader = GroovyObject.class.classLoader as URLClassLoader
configurations.driver.each {
    File file -> loader.addURL(file.toURI().toURL())
}
loader.loadClass('org.postgresql.Driver')

import groovy.sql.Sql

task initdb {
    doLast {
        def driver = 'org.postgresql.Driver'
        def user = System.getenv("PG_USER")
        def password = System.getenv("PG_PASSWORD")

        try {
            Sql sql = Sql.newInstance('jdbc:postgresql://localhost:5432/postgres', user, password, driver)
            sql.execute "REVOKE CONNECT ON DATABASE college FROM public"
            sql.execute "SELECT pg_terminate_backend(pg_stat_activity.pid)\n" +
                    "FROM pg_stat_activity\n" +
                    "WHERE pg_stat_activity.datname = 'college';"
            sql.execute "drop database if exists \"college\""
            sql.execute "create database \"college\" with encoding = 'UTF8'"
        }
        catch(Exception e){
            println(e)
        }

    }
}

task initschema {
    doLast {
        def driver = 'org.postgresql.Driver'
        def user = System.getenv("PG_USER")
        def password = System.getenv("PG_PASSWORD")

        Sql sql = Sql.newInstance("jdbc:postgresql://localhost:5432/college", user, password, driver)
        sql.execute "drop schema if exists tracker cascade"
        sql.execute "drop user if exists tracker_user"
        sql.execute "create user tracker_user with password 'tr@ck3r_u53r'"
        sql.execute "create schema tracker"
        sql.execute "grant all privileges on schema tracker to tracker_user"
        sql.execute "alter user tracker_user set search_path = tracker"

    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/college'
    user = 'tracker_user'
    password = 'tr@ck3r_u53r'
}
